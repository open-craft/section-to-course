[tox]
envlist = quality,pii_check,package,migrations

[doc8]
; D001 = Line too long
ignore = D001

[pycodestyle]
exclude = .git,.tox,migrations
max-line-length = 120

[pydocstyle]
; D101 = Missing docstring in public class
; D200 = One-line docstring should fit on one line with quotes
; D203 = 1 blank line required before class docstring
; D212 = Multi-line docstring summary should start at the first line
; D215 = Section underline is over-indented (numpy style)
; D404 = First word of the docstring should not be This (numpy style)
; D405 = Section name should be properly capitalized (numpy style)
; D406 = Section name should end with a newline (numpy style)
; D407 = Missing dashed underline after section (numpy style)
; D408 = Section underline should be in the line following the section's name (numpy style)
; D409 = Section underline should match the length of its name (numpy style)
; D410 = Missing blank line after section (numpy style)
; D411 = Missing blank line before section (numpy style)
; D412 = No blank lines allowed between a section header and its content (numpy style)
; D413 = Missing blank line after last section (numpy style)
; D414 = Section has no content (numpy style)
ignore = D101,D200,D203,D212,D215,D404,D405,D406,D407,D408,D409,D410,D411,D412,D413,D414
match-dir = (?!migrations)

[pytest]
DJANGO_SETTINGS_MODULE = test_settings
addopts = --cov section_to_course --cov-report term-missing --cov-report xml
norecursedirs = .* docs requirements site-packages
django_find_project = false

[testenv:quality]
setenv =
    DJANGO_SETTINGS_MODULE = test_settings
allowlist_externals =
    make
    rm
    touch
deps =
    -r{toxinidir}/requirements/quality.txt
commands =
    pylint section_to_course manage.py setup.py
    pycodestyle section_to_course tests manage.py setup.py
    pydocstyle section_to_course tests manage.py setup.py
    isort --check-only --diff tests test_utils section_to_course manage.py setup.py test_settings.py
    make selfcheck

[testenv:pii_check]
setenv =
    DJANGO_SETTINGS_MODULE = test_settings
deps =
    -r{toxinidir}/requirements/test.txt
commands =
    code_annotations django_find_annotations --config_file .pii_annotations.yml --lint --report --coverage

[testenv:package]
deps =
    build
    twine
commands =
    python -m build
    twine check dist/*

[testenv:migrations]
allowlist_externals =
    ./manage.py
deps =
    -r{toxinidir}/requirements/base.txt
commands =
    ./manage.py makemigrations section_to_course --check --dry-run --verbosity 3
